[{"/home/saimon/Documents/Nexfar/nf-task-sandbox-v4/frontend/src/index.js":"1","/home/saimon/Documents/Nexfar/nf-task-sandbox-v4/frontend/src/App.js":"2","/home/saimon/Documents/Estudos/frontend/src/index.js":"3","/home/saimon/Documents/Estudos/frontend/src/App.js":"4"},{"size":279,"mtime":1651580705745,"results":"5","hashOfConfig":"6"},{"size":2863,"mtime":1651580705745,"results":"7","hashOfConfig":"6"},{"size":279,"mtime":1651580705745,"results":"8","hashOfConfig":"9"},{"size":3323,"mtime":1651598961266,"results":"10","hashOfConfig":"9"},{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1awrq2f",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"am2yhk",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/saimon/Documents/Nexfar/nf-task-sandbox-v4/frontend/src/index.js",[],[],"/home/saimon/Documents/Nexfar/nf-task-sandbox-v4/frontend/src/App.js",["24","25","26"],[],"import React, {useState} from 'react';\nimport { Component } from 'react';\nimport axios from 'axios';\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8080/api/\",\n})\n\nclass App extends Component {\n\n  state = {\n    tasks: [],\n    id:\"\",\n    name:\"\",\n    description:\"\"\n  }\n\n  constructor() {\n    super();\n    this.getTasks();\n  }\n\n  getTasks = async () => {\n    try{\n      let data = await api.get(\"/task\").then(({data}) => data);\n      this.setState({tasks:data})\n    } catch(err){\n      console.log(err)\n    }\n  }\n\n  createTask = async (a, b) => {\n    try {\n      if(this.state.id != \"\") {\n        await api.put(`/task/${this.state.id}`, {name:a.target.value, description:b.target.value})\n      } else {\n        await api.post(\"/task\", {name: a.target.value, description:b.target.value});\n      }\n    } catch(err) {\n      console.log(err)\n    }\n    this.setState({ id:'', name: '', description: '' })\n    this.getTasks();\n  }\n\n  deleteTask = async (id) => {\n    let data = await api.delete(`/task/${id}`)\n    this.getTasks();\n  }\n\n  updateTask = async (id, name, description) => {\n    \n    this.setState({ id:id, name: name, description: description })\n    console.log(this.state.name)\n\n    this.getTasks();\n  }\n\n  setName = (a) => {\n    this.setState({name:a});\n  }\n\n  setDescription = (a) => {\n    this.setState({description:a});\n  }\n\n  render () {\n    return (\n    <div className=\"App\">\n      <h1>\n        Tasks\n      </h1>\n        <div>\n        <table className=\"table table-striped\">\n          <thead>\n              <tr>\n                  <td>Id</td>\n                  <td>Name</td>\n                  <td>Description</td>\n              </tr>\n          </thead>\n          <tbody>\n              {\n                this.state.tasks.map(\n                    task =>\n                    <tr key= {task.id}>\n                        <td>{task.id}</td>\n                        <td>{task.name}</td>\n                        <td>{task.description}</td>\n                        <td><button  type=\"button\" className='btn btn-primary' onClick={() => this.deleteTask(task.id)}>Delete</button></td>\n                        <td><button  type=\"button\" className='btn btn-primary' onClick={() => this.updateTask(task.id, task.name, task.description)}>Update</button></td>\n                    </tr>\n                )\n              }\n          </tbody>\n          </table>\n          </div>\n          <div>\n            <h2>Send Task</h2>\n            <input type=\"text\" value={this.state.name.value} onChange={(a) => this.setName(a)}></input>\n            <input type=\"text\" value={this.state.description.value} onChange={(a) => this.setDescription(a)}></input>\n            <button onClick={() => this.createTask(this.state.name, this.state.description)} type=\"button\" className='btn btn-primary'> Send Task</button>\n          </div>\n    </div>\n\n  );\n}\n}\n\nexport default App;\n","/home/saimon/Documents/Estudos/frontend/src/index.js",[],[],"/home/saimon/Documents/Estudos/frontend/src/App.js",["27","28"],[],{"ruleId":"29","severity":1,"message":"30","line":1,"column":16,"nodeType":"31","messageId":"32","endLine":1,"endColumn":24},{"ruleId":"33","severity":1,"message":"34","line":34,"column":24,"nodeType":"35","messageId":"36","endLine":34,"endColumn":26},{"ruleId":"29","severity":1,"message":"37","line":47,"column":9,"nodeType":"31","messageId":"32","endLine":47,"endColumn":13},{"ruleId":"33","severity":1,"message":"38","line":39,"column":27,"nodeType":"35","messageId":"36","endLine":39,"endColumn":29},{"ruleId":"33","severity":1,"message":"34","line":56,"column":25,"nodeType":"35","messageId":"36","endLine":56,"endColumn":27},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","Expected '===' and instead saw '=='."]